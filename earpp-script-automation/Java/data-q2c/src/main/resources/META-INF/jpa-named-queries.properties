# INBOUND PROCESSES
# AR Invoices
AbstractBo.getProcessInstanceBOs = select * from fusionintegration.abs_process_instance_tbl where batch_name like :filename

AbstractBo.getProcessFileDetailsBOs = select * from fusionintegration.abs_process_file_details_tbl \
where file_name like %:filename%

AbstractBo.getInterfaceLinesBOs = SELECT INSTANCE_ID, ALTERNATEDOCUMENTID, STATUS, ERROR_MESSAGE \
FROM FUSIONINTEGRATION.ABS_RA_INTERFACE_LINES_ALL_TBL \
where ALTERNATEDOCUMENTID IN (:filenames)

AbstractBo.getJobHistoryInLinesBOs = SELECT \
    (SELECT DISTINCT alternatedocumentid \
        FROM fusionintegration.abs_ra_interface_lines_all_tbl \
        WHERE scheduled_instance_id = jo.instance_id \
    ) alternatedocumentid, \
    jo.* \
FROM fusionintegration.abs_job_history_tbl jo \
WHERE Instance_id IN \
    (SELECT scheduled_instance_id \
        FROM fusionintegration.abs_ra_interface_lines_all_tbl \
        WHERE 1 = 1 \
        AND alternatedocumentid in (:filenames) \
    ) \
Order by 1, 2, 3, 4

AbstractBo.getInterfaceLineCountBos = SELECT DISTINCT(A.ALTERNATEDOCUMENTID),A.EXPECTEDMESSAGECNT AS COUNT FROM FUSIONINTEGRATION.ABS_RA_INTERFACE_LINES_ALL_TBL A WHERE ALTERNATEDOCUMENTID like %:filename% ORDER BY ALTERNATEDOCUMENTID desc

# Bank Paids
AbstractBo.getBankStatementsBOs = SELECT jo.*,(SELECT DISTINCT ALTERNATEDOCUMENTID \
    FROM FUSIONINTEGRATION.ABS_EAS_MONEY_ORDER_INT_STG_TBL \
    WHERE SCHEDULED_INSTANCE_ID = JO.INSTANCE_ID) \
\
ALTERNATEDOCUMENTID, (SELECT DISTINCT FILE_NAME \
    FROM FUSIONINTEGRATION.ABS_EAS_MONEY_ORDER_INT_STG_TBL \
    WHERE SCHEDULED_INSTANCE_ID = JO.INSTANCE_ID) \
\
FILE_NAME, (SELECT DISTINCT COUNT(FILE_NAME) \
    FROM FUSIONINTEGRATION.ABS_EAS_MONEY_ORDER_INT_STG_TBL \
    WHERE SCHEDULED_INSTANCE_ID = JO.INSTANCE_ID \
    GROUP BY FILE_NAME) \
\
COUNT FROM FUSIONINTEGRATION.ABS_JOB_HISTORY_TBL JO \
WHERE INSTANCE_ID IN \
    (SELECT SCHEDULED_INSTANCE_ID \
        FROM FUSIONINTEGRATION.ABS_EAS_MONEY_ORDER_INT_STG_TBL \
        WHERE 1 = 1 \
        AND ALTERNATEDOCUMENTID LIKE :filename% \
        AND JOB_NAME = 'ImportBankStatements' \
    ) \
ORDER BY INSTANCE_ID,PROCESS_TIME

AbstractBo.getBankProcessInstanceBOs = Select \
INSTANCE_ID, BATCH_NAME, INTEGRATION_NAME, INTEGRATION_PATTERN, STATUS, \
TRANSFORMATION_STATUS, INTERFACE_ID, AIC_INSTANCE_ID \
RUN_DATE, ATTRIBUTE1, ATTRIBUTE2, PROCESS_TIME \
FROM fusionintegration.abs_process_instance_tbl \
WHERE BATCH_NAME LIKE %:filename% \
ORDER by PROCESS_TIME DESC

# Employee Payroll
AbstractBo.getProcessInstanceByDescBOs = SELECT * FROM fusionintegration.ABS_PROCESS_INSTANCE_TBL \
WHERE BATCH_NAME LIKE :filename ORDER BY PROCESS_TIME DESC

AbstractBo.getJobHistoryTrxsBOs = SELECT \
    (SELECT DISTINCT alternatedocumentid \
        FROM fusionintegration.ABS_EXT_TRXS_INT_STG_TBL \
        WHERE scheduled_instance_id = jo.instance_id \
    ) alternatedocumentid, \
    jo.* \
FROM fusionintegration.abs_job_history_tbl jo \
WHERE Instance_id IN \
    (SELECT scheduled_instance_id \
        FROM fusionintegration.ABS_EXT_TRXS_INT_STG_TBL \
        WHERE 1 = 1 \
        AND alternatedocumentid = :filename \
    ) \
Order by 1, 2, 3, 4

# LockBox
AbstractBo.getProcessFileDetailsFilteredBOs = SELECT file_name, attribute2, attribute4, load_status, process_time \
FROM FUSIONINTEGRATION.ABS_PROCESS_FILE_DETAILS_TBL \
WHERE FILE_NAME = :filename \
order by process_time desc

AbstractBo.getProcessFileDetailsExactBOs = SELECT * FROM fusionintegration.ABS_PROCESS_FILE_DETAILS_TBL \
WHERE FILE_NAME = :filename

AbstractBo.getLockboxHdrTrailPayBOs = SELECT * FROM fusionintegration.ABS_AR_LOCKBOX_HDRTRAILPAY_STG_TBL \
where alternatedocumentid = :filename

AbstractBo.getJobHistoryLockboxBOs = SELECT \
    (SELECT DISTINCT alternatedocumentid \
        FROM fusionintegration.ABS_AR_LOCKBOX_HDRTRAILPAY_STG_TBL \
        WHERE scheduled_instance_id = jo.instance_id \
    ) alternatedocumentid, \
    jo.* \
FROM fusionintegration.abs_job_history_tbl jo \
WHERE Instance_id IN \
    (SELECT scheduled_instance_id \
        FROM fusionintegration.ABS_AR_LOCKBOX_HDRTRAILPAY_STG_TBL \
        WHERE 1 = 1 \
        AND alternatedocumentid = :filename \
    ) \
Order by 1, 2, 3, 4

AbstractBo.getTargetedProcessFileDetailsBOs = WITH max_instance AS ( \
    SELECT \
    w.batch_name, MAX(w.process_time) process_time \
    FROM fusionintegration.abs_process_instance_tbl w \
    WHERE \
        w.interface_id        = 'INT33' \
        AND w.batch_name          LIKE :filename || '%' \
    GROUP BY w.batch_name) \
    SELECT \
        a.file_name, a.load_status, \
        TO_CHAR(MIN(a.process_time), 'YYYY-MM-DD HH:MI:SS AM') load_date, \
        c.expectedmessagecnt, \
        COUNT(c.alternatedocumentid)                           consumed_rec, \
        TO_CHAR(MIN(c.process_time), 'YYYY-MM-DD HH:MI:SS AM') start_process, \
        TO_CHAR(MAX(c.process_time), 'YYYY-MM-DD HH:MI:SS AM') end_process, \
        CASE WHEN c.source_application_code = 'AR LOCKBOX' THEN SUBSTR(c.alternatedocumentid, 10, 2) \
            ELSE c.source_application_code \
            END                                               box_name, \
        c.source_application_code, \
        c.batch_name                                           batch_name, \
        SUM(c.remittance_amount)                               remittance_amount, \
        b.instance_id, \
        TO_CHAR(MIN(b.process_time), 'YYYY-MM-DD HH:MI:SS AM') process_time, \
        b.status, \
        b.transformation_status, \
        b.transformation_msg \
        FROM \
        fusionintegration.abs_process_file_details_tbl       a, \
        fusionintegration.abs_process_instance_tbl           b, \
        fusionintegration.abs_ar_lockbox_hdrtrailpay_stg_tbl c, \
        max_instance max \
    WHERE \
        a.interface_id             = 'INT33' \
        AND a.file_name                LIKE :filename || '%' \
        AND (b.batch_name (+)          = a.file_name   AND b.batch_name = max.batch_name AND b.process_time = max.process_time) \
        AND (c.alternatedocumentid (+) = b.batch_name  AND c.source_application_code = 'AR LOCKBOX') \
    GROUP BY \
        a.file_name, \
        a.load_status, \
        a.process_time, \
        b.instance_id, \
        b.status, \
        b.transformation_status, \
        b.transformation_msg, \
        c.expectedmessagecnt, \
        CASE WHEN c.source_application_code = 'AR LOCKBOX' THEN SUBSTR(c.alternatedocumentid, 10, 2) \
            ELSE c.source_application_code \
            END, \
        c.source_application_code, \
        c.batch_name \
    ORDER BY a.process_time

# OUTBOUND PROCESSES
# AR Customers
AbstractBo.getArCustProcessDetailsBOs = SELECT * FROM FUSIONINTEGRATION.ABS_OUTBOUND_PROCESS_DETAILS \
WHERE INTEGRATION_ID = 'INT60' \
and PROCESS_TIME >= TRUNC(SYSTIMESTAMP at TIME zone 'US/Mountain') \
ORDER BY INTEGRATION_ID

# Crosswalk
AbstractBo.getCrosswalkProcessDetailsBOs = SELECT * FROM FUSIONINTEGRATION.ABS_OUTBOUND_PROCESS_DETAILS \
WHERE INTEGRATION_ID = 'INT62' \
and PROCESS_TIME >= TRUNC(SYSTIMESTAMP at TIME zone 'US/Mountain') \
ORDER BY INTEGRATION_ID

# Customer Balance
AbstractBo.getCustBalProcessDetailsBOs = SELECT * FROM FUSIONINTEGRATION.ABS_OUTBOUND_PROCESS_DETAILS \
WHERE INTEGRATION_ID = 'INT11' \
and PROCESS_TIME >= TRUNC(SYSTIMESTAMP at TIME zone 'US/Mountain') \
ORDER BY INTEGRATION_ID

# Customer Statements
AbstractBo.getCustStatementsProcessDetailsBOs = SELECT * FROM FUSIONINTEGRATION.ABS_OUTBOUND_PROCESS_DETAILS \
WHERE INTEGRATION_ID = 'INT21' \
and PROCESS_TIME >= TRUNC(SYSTIMESTAMP at TIME zone 'US/Mountain') \
ORDER BY INTEGRATION_ID

# Positive Pay and Voids
AbstractBo.getPosPayAndVoidsProcessDetailsBOs = SELECT * FROM FUSIONINTEGRATION.ABS_OUTBOUND_PROCESS_DETAILS \
WHERE INTEGRATION_ID IN ('INT31') \
and PROCESS_TIME >= TRUNC(SYSTIMESTAMP at TIME zone 'US/Mountain') \
ORDER BY INTEGRATION_ID

# PRG Extracts
AbstractBo.getPrgExtractsProcessDetailsBOs = SELECT * FROM FUSIONINTEGRATION.ABS_OUTBOUND_PROCESS_DETAILS \
WHERE INTEGRATION_ID in ('INT03','INT04','INT05','INT06','INT07','INT28','INT36','INT65') \
and PROCESS_TIME >= TRUNC(SYSTIMESTAMP at TIME zone 'US/Mountain') \
ORDER BY INTEGRATION_ID

# Stale Dated Checks
AbstractBo.getSDChecksProcessDetailsBOs = SELECT * FROM FUSIONINTEGRATION.ABS_OUTBOUND_PROCESS_DETAILS \
WHERE INTEGRATION_ID = 'INT36' \
and PROCESS_TIME >= TRUNC(SYSTIMESTAMP at TIME zone 'US/Mountain') \
ORDER BY INTEGRATION_ID

# Uware
AbstractBo.getUwareProcessDetailsBOs = SELECT * FROM FUSIONINTEGRATION.ABS_OUTBOUND_PROCESS_DETAILS \
WHERE INTEGRATION_ID IN ('INT02','INT22') \
and PROCESS_TIME >= TRUNC(SYSTIMESTAMP at TIME zone 'US/Mountain') \
ORDER BY INTEGRATION_ID